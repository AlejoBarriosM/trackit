generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum UserRole {
  USER
  CUSTOMER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum ProductStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum MovementType {
  IN
  OUT
}

enum MovementStatus {
  DRAFT
  PENDING
  APPROVED
  REJECTED
}

enum WarehouseStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

model Product {
  id          String        @id @default(cuid())
  name        String
  description String?
  ref         String        @unique
  stock       Int
  price       Float
  cost        Float
  status      ProductStatus @default(ACTIVE)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  MovementDetail MovementDetail[]
}

model Warehouse {
  id        String          @id @default(cuid())
  name      String
  location  String
  status    WarehouseStatus @default(ACTIVE)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  InventoryMovement Movement[]
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  name      String?
  role      UserRole   @default(USER)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  Movement Movement[]
}

model Movement {
  id          String         @id @default(cuid())
  warehouse   Warehouse      @relation(fields: [warehouseId], references: [id])
  warehouseId String
  totalCost   Float
  user        User           @relation(fields: [userId], references: [id])
  userId      String
  type        MovementType
  status      MovementStatus
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  MovementDetail MovementDetail[]
}

model MovementDetail {
  id         String   @id @default(cuid())
  movement   Movement @relation(fields: [movementId], references: [id])
  movementId String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int
  cost       Float
  price      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

generator seed {
  provider = "prisma-client-js"
  output   = "./generated/seed"
}
